{
  "$schema": "http://json.schemastore.org/sarif-1.0.0",
  "version": "1.0.0",
  "runs": [
    {
      "tool": {
        "name": "Microsoft (R) Visual C# Compiler",
        "version": "4.1.0.0",
        "fileVersion": "4.1.0-3.22075.3 (592501cb)",
        "semanticVersion": "4.1.0",
        "language": "en-US"
      },
      "results": [
        {
          "ruleId": "CS1998",
          "level": "warning",
          "message": "This async method lacks 'await' operators and will run synchronously. Consider using the 'await' operator to await non-blocking API calls, or 'await Task.Run(...)' to do CPU-bound work on a background thread.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Radu/Desktop/Back-upRadu/4thYear/CerganRaduMihai_DevEfficient/DevEfficient_ServerSide/Infrastructure/Services/EmailSenderService.cs",
                "region": {
                  "startLine": 37,
                  "startColumn": 27,
                  "endLine": 37,
                  "endColumn": 36
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2933",
          "level": "warning",
          "message": "Make '_transaction' 'readonly'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Radu/Desktop/Back-upRadu/4thYear/CerganRaduMihai_DevEfficient/DevEfficient_ServerSide/Infrastructure/Persistence/EntityDatabaseTransaction.cs",
                "region": {
                  "startLine": 11,
                  "startColumn": 39,
                  "endLine": 11,
                  "endColumn": 51
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3881",
          "level": "warning",
          "message": "Fix this implementation of 'IDisposable' to conform to the dispose pattern.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Radu/Desktop/Back-upRadu/4thYear/CerganRaduMihai_DevEfficient/DevEfficient_ServerSide/Infrastructure/Persistence/EntityDatabaseTransaction.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 18,
                  "endLine": 9,
                  "endColumn": 43
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/Radu/Desktop/Back-upRadu/4thYear/CerganRaduMihai_DevEfficient/DevEfficient_ServerSide/Infrastructure/Persistence/EntityDatabaseTransaction.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 18,
                  "endLine": 9,
                  "endColumn": 43
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/Radu/Desktop/Back-upRadu/4thYear/CerganRaduMihai_DevEfficient/DevEfficient_ServerSide/Infrastructure/Persistence/EntityDatabaseTransaction.cs",
                "region": {
                  "startLine": 22,
                  "startColumn": 21,
                  "endLine": 22,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Provide 'protected' overridable implementation of 'Dispose(bool)' on 'EntityDatabaseTransaction' or mark the type as 'sealed'.",
              "1": "'EntityDatabaseTransaction.Dispose()' should call 'Dispose(true)' and 'GC.SuppressFinalize(this)'."
            }
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Radu/Desktop/Back-upRadu/4thYear/CerganRaduMihai_DevEfficient/DevEfficient_ServerSide/Infrastructure/Persistence/DevEfficientDbContext.cs",
                "region": {
                  "startLine": 21,
                  "startColumn": 9,
                  "endLine": 21,
                  "endColumn": 57
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3168",
          "level": "warning",
          "message": "Return 'Task' instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Radu/Desktop/Back-upRadu/4thYear/CerganRaduMihai_DevEfficient/DevEfficient_ServerSide/Infrastructure/Services/EmailSenderService.cs",
                "region": {
                  "startLine": 37,
                  "startColumn": 22,
                  "endLine": 37,
                  "endColumn": 26
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1125",
          "level": "warning",
          "message": "Remove the unnecessary Boolean literal(s).",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Radu/Desktop/Back-upRadu/4thYear/CerganRaduMihai_DevEfficient/DevEfficient_ServerSide/Infrastructure/Persistence/Repository/SprintRepository.cs",
                "region": {
                  "startLine": 53,
                  "startColumn": 212,
                  "endLine": 53,
                  "endColumn": 217
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1125",
          "level": "warning",
          "message": "Remove the unnecessary Boolean literal(s).",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Radu/Desktop/Back-upRadu/4thYear/CerganRaduMihai_DevEfficient/DevEfficient_ServerSide/Infrastructure/Persistence/Repository/SprintRepository.cs",
                "region": {
                  "startLine": 53,
                  "startColumn": 240,
                  "endLine": 53,
                  "endColumn": 245
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1125",
          "level": "warning",
          "message": "Remove the unnecessary Boolean literal(s).",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Radu/Desktop/Back-upRadu/4thYear/CerganRaduMihai_DevEfficient/DevEfficient_ServerSide/Infrastructure/Persistence/Repository/SprintRepository.cs",
                "region": {
                  "startLine": 62,
                  "startColumn": 212,
                  "endLine": 62,
                  "endColumn": 217
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1125",
          "level": "warning",
          "message": "Remove the unnecessary Boolean literal(s).",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Radu/Desktop/Back-upRadu/4thYear/CerganRaduMihai_DevEfficient/DevEfficient_ServerSide/Infrastructure/Persistence/Repository/SprintRepository.cs",
                "region": {
                  "startLine": 62,
                  "startColumn": 240,
                  "endLine": 62,
                  "endColumn": 245
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1168",
          "level": "warning",
          "message": "Return an empty collection instead of null.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Radu/Desktop/Back-upRadu/4thYear/CerganRaduMihai_DevEfficient/DevEfficient_ServerSide/Infrastructure/Persistence/Repository/SprintRepository.cs",
                "region": {
                  "startLine": 65,
                  "startColumn": 17,
                  "endLine": 65,
                  "endColumn": 29
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        }
      ],
      "rules": {
        "CS1998": {
          "id": "CS1998",
          "shortDescription": "Async method lacks 'await' operators and will run synchronously",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS1998)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "S1125": {
          "id": "S1125",
          "shortDescription": "Boolean literals should not be redundant",
          "fullDescription": "Redundant Boolean literals should be removed from expressions to improve readability.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1125",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1168": {
          "id": "S1168",
          "shortDescription": "Empty arrays and collections should be returned instead of null",
          "fullDescription": "Returning null instead of an actual array, collection or map forces callers of the method to explicitly test for nullity, making them more complex and less readable.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1168",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S125": {
          "id": "S125",
          "shortDescription": "Sections of code should not be commented out",
          "fullDescription": "Programmers should not comment out code as it bloats programs and reduces readability.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-125",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2933": {
          "id": "S2933",
          "shortDescription": "Fields that are only assigned in the constructor should be \"readonly\"",
          "fullDescription": "readonly fields can only be assigned in a class constructor. If a class has a field that’s not marked readonly but is only set in the constructor, it could cause confusion about the field’s intended use. To avoid confusion, such fields should be marked readonly to make their intended use explicit, and to prevent future maintainers from inadvertently changing their use.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2933",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3168": {
          "id": "S3168",
          "shortDescription": "\"async\" methods should not return \"void\"",
          "fullDescription": "An async method with a void return type is a \"fire and forget\" method best reserved for event handlers because there’s no way to wait for the method’s execution to complete and respond accordingly. There’s also no way to catch exceptions thrown from the method.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3168",
          "properties": {
            "category": "Major Bug",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3881": {
          "id": "S3881",
          "shortDescription": "\"IDisposable\" should be implemented correctly",
          "fullDescription": "The IDisposable interface is a mechanism to release unmanaged resources, if not implemented correctly this could result in resource leaks or more severe bugs.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3881",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        }
      }
    }
  ]
}